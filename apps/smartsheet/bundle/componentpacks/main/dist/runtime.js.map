{
  "version": 3,
  "sources": ["globals:@uesio/ui", "runtime.ts", "../src/components/mapper/mapper.tsx"],
  "sourcesContent": ["module.exports = uesio", "import { component } from \"@uesio/ui\";\nimport mapper from \"../src/components/mapper/mapper\";\ncomponent.registry.register(\"uesio/smartsheet.mapper\",mapper);", "import { definition, api, component } from \"@uesio/ui\"\n\ntype ComponentDefinition = {\n\tmappingWireName: string\n\tsheetWireName: string\n}\n\ntype Column = {\n\tid: number\n\tindex: string\n\ttitle: string\n\ttype: string\n}\n\nconst Component: definition.UC<ComponentDefinition> = (props) => {\n\tconst SelectField = component.getUtility(\"uesio/io.selectfield\")\n\tconst FieldWrapper = component.getUtility(\"uesio/io.fieldwrapper\")\n\tconst MapField = component.getUtility(\"uesio/io.mapfield\")\n\tconst { context, definition } = props\n\tconst { mappingWireName, sheetWireName } = definition\n\tconst record = context.getRecord()\n\tconst mappingWire = api.wire.useWire(mappingWireName, context)\n\tif (!mappingWire)\n\t\tthrow new Error(\"No mapping wire found: \" + mappingWireName)\n\tconst mappingRecord = mappingWire.getFirstRecord()\n\tif (!mappingRecord) throw new Error(\"No record in mapping wire\")\n\tconst fieldMappings = mappingRecord.getFieldValue<Record<string, string>>(\n\t\t\"uesio/smartsheet.fields\"\n\t)\n\tconst fieldName = record.getFieldValue<string>(\"uesio/core.name\")\n\tif (!fieldName) throw new Error(\"No field name available\")\n\tconst fieldType = record.getFieldValue<string>(\"uesio/core.type\")\n\tif (!fieldName) throw new Error(\"No field type available\")\n\tconst fieldNamespace = record.getFieldValue<string>(\"uesio/core.namespace\")\n\tif (!fieldNamespace) throw new Error(\"No field namespace available\")\n\n\tconst fieldKey = fieldNamespace + \".\" + fieldName\n\n\tconst sheetWire = api.wire.useWire(sheetWireName, context)\n\tif (!sheetWire) throw new Error(\"No sheet wire found: \" + sheetWireName)\n\tconst sheetRecord = sheetWire.getFirstRecord()\n\tif (!sheetRecord) throw new Error(\"No record in sheets wire\")\n\tconst columns = sheetRecord.getFieldValue(\n\t\t\"uesio/smartsheet.columns\"\n\t) as Column[]\n\tif (!columns) throw new Error(\"No columns provided by sheets wire\")\n\n\tconst options = columns.map((column) => ({\n\t\tlabel: column.title,\n\t\tvalue: column.id + \"\",\n\t}))\n\n\toptions.unshift({\n\t\tlabel: \"\",\n\t\tvalue: \"\",\n\t})\n\n\tconst selected = fieldMappings?.[fieldKey] || {}\n\n\tif (fieldType === \"MAP\") {\n\t\treturn (\n\t\t\t<FieldWrapper context={context} variant=\"uesio/io.table\">\n\t\t\t\t<MapField\n\t\t\t\t\tvalue={Object.fromEntries(\n\t\t\t\t\t\tObject.entries(selected).map(([k, v]) => [\n\t\t\t\t\t\t\tk,\n\t\t\t\t\t\t\t{ column: v },\n\t\t\t\t\t\t])\n\t\t\t\t\t)}\n\t\t\t\t\tsetValue={(value: Record<string, { column: string }>) => {\n\t\t\t\t\t\tconsole.log(\"Beh\", value)\n\t\t\t\t\t\tconst modified = Object.fromEntries(\n\t\t\t\t\t\t\tObject.entries(value).map(([k, v]) => [k, v.column])\n\t\t\t\t\t\t)\n\t\t\t\t\t\tconsole.log(\"Modifieeed\", modified)\n\t\t\t\t\t\tmappingRecord.update(\n\t\t\t\t\t\t\t\"uesio/smartsheet.fields\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t...fieldMappings,\n\t\t\t\t\t\t\t\t...{\n\t\t\t\t\t\t\t\t\t[fieldKey]: modified,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcontext\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t\tmode=\"EDIT\"\n\t\t\t\t\toptions={{\n\t\t\t\t\t\tkeyField: {\n\t\t\t\t\t\t\tname: \"path\",\n\t\t\t\t\t\t\tlabel: \"Path\",\n\t\t\t\t\t\t\ttype: \"TEXT\",\n\t\t\t\t\t\t\tnamespace: \"\",\n\t\t\t\t\t\t\taccessible: true,\n\t\t\t\t\t\t\tcreateable: true,\n\t\t\t\t\t\t\tupdateable: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvalueField: {\n\t\t\t\t\t\t\tname: \"column\",\n\t\t\t\t\t\t\tlabel: \"Column\",\n\t\t\t\t\t\t\ttype: \"STRUCT\",\n\t\t\t\t\t\t\tsubfields: {\n\t\t\t\t\t\t\t\tcolumn: {\n\t\t\t\t\t\t\t\t\tname: \"column\",\n\t\t\t\t\t\t\t\t\tlabel: \"Column\",\n\t\t\t\t\t\t\t\t\ttype: \"SELECT\",\n\t\t\t\t\t\t\t\t\tselectlist: {\n\t\t\t\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tnamespace: \"\",\n\t\t\t\t\t\t\taccessible: true,\n\t\t\t\t\t\t\tcreateable: true,\n\t\t\t\t\t\t\tupdateable: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\tcontext={context}\n\t\t\t\t/>\n\t\t\t</FieldWrapper>\n\t\t)\n\t}\n\treturn (\n\t\t<FieldWrapper context={context} variant=\"uesio/io.table\">\n\t\t\t<SelectField\n\t\t\t\tvalue={selected}\n\t\t\t\tsetValue={(value: string) => {\n\t\t\t\t\tmappingRecord.update(\n\t\t\t\t\t\t\"uesio/smartsheet.fields\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...fieldMappings,\n\t\t\t\t\t\t\t...{\n\t\t\t\t\t\t\t\t[fieldKey]: value,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcontext\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t\toptions={options}\n\t\t\t\tcontext={context}\n\t\t\t/>\n\t\t</FieldWrapper>\n\t)\n}\n\nexport default Component\n"],
  "mappings": "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",
  "names": ["require_ui", "__commonJSMin", "exports", "module", "import_ui", "import_ui", "Component", "props", "SelectField", "FieldWrapper", "MapField", "context", "definition", "mappingWireName", "sheetWireName", "record", "mappingWire", "mappingRecord", "fieldMappings", "fieldName", "fieldType", "fieldNamespace", "fieldKey", "sheetWire", "sheetRecord", "columns", "options", "column", "selected", "k", "v", "value", "modified", "mapper_default", "mapper_default"]
}
